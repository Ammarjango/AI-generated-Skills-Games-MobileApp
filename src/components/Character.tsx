/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React from "react";
import { useGLTF } from "@react-three/drei/native";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
    nodes: {
        EyeLeft: THREE.Mesh;
        EyeRight: THREE.Mesh;
        Head: THREE.Mesh;
        Hair: THREE.Mesh;
        Body: THREE.Mesh;
        Outfit_Bottom001: THREE.Mesh;
        Outfit_Footwear001: THREE.Mesh;
        Outfit_Top001: THREE.Mesh;
    };
    materials: {
        Wolf3D_Eye: THREE.MeshStandardMaterial;
        Wolf3D_Skin: THREE.MeshStandardMaterial;
        Wolf3D_Hair: THREE.MeshStandardMaterial;
        Wolf3D_Outfit_Bottom: THREE.MeshStandardMaterial;
        Wolf3D_Outfit_Footwear: THREE.MeshStandardMaterial;
        Wolf3D_Outfit_Top: THREE.MeshStandardMaterial;
    };
};

export default function Model(props: JSX.IntrinsicElements["group"]) {
    const { nodes, materials } = useGLTF(require("../../assets/3DModel/Character_1.glb")) as GLTFResult;
    return (
        <group {...props} dispose={null}>
            <mesh
                name="EyeLeft"
                castShadow
                receiveShadow
                geometry={nodes.EyeLeft.geometry}
                material={materials.Wolf3D_Eye}
                morphTargetDictionary={nodes.EyeLeft.morphTargetDictionary}
                morphTargetInfluences={nodes.EyeLeft.morphTargetInfluences}
            />
            <mesh
                name="EyeRight"
                castShadow
                receiveShadow
                geometry={nodes.EyeRight.geometry}
                material={materials.Wolf3D_Eye}
                morphTargetDictionary={nodes.EyeRight.morphTargetDictionary}
                morphTargetInfluences={nodes.EyeRight.morphTargetInfluences}
            />
            <mesh
                name="Head"
                castShadow
                receiveShadow
                geometry={nodes.Head.geometry}
                material={materials.Wolf3D_Skin}
                morphTargetDictionary={nodes.Head.morphTargetDictionary}
                morphTargetInfluences={nodes.Head.morphTargetInfluences}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Hair.geometry}
                material={materials.Wolf3D_Hair}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Body.geometry}
                material={materials.Wolf3D_Skin}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Outfit_Bottom001.geometry}
                material={materials.Wolf3D_Outfit_Bottom}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Outfit_Footwear001.geometry}
                material={materials.Wolf3D_Outfit_Footwear}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Outfit_Top001.geometry}
                material={materials.Wolf3D_Outfit_Top}
            />
        </group>
    );
}

useGLTF.preload(require("../../assets/3DModel/Character_1.glb"));




